{"version":3,"sources":["Clock.tsx","App.tsx","index.tsx"],"names":["Clock","state","currentTime","Date","toUTCString","slice","timerId","this","window","setInterval","time","setState","console","info","clearInterval","name","props","className","Component","getRandomName","value","now","toString","App","hasClock","clockName","showClock","hideClock","event","preventDefault","document","addEventListener","_prevProps","prevState","debug","removeEventListener","ReactDOM","render","getElementById"],"mappings":"6MAUaA,EAAb,4MACEC,MAAyB,CACvBC,aAAa,IAAIC,MAAOC,cAAcC,OAAO,IAAK,IAFtD,EAKEC,QAAU,EALZ,uDAOE,WAAqB,IAAD,OAClBC,KAAKD,QAAUE,OAAOC,aAAY,WAChC,IAAMC,GAAe,IAAIP,MAAOC,cAAcC,OAAO,IAAK,GAE1D,EAAKM,SAAS,CAAET,YAAaQ,IAG7BE,QAAQC,KAAKH,KACZ,OAfP,kCAkBE,WACEF,OAAOM,cAAcP,KAAKD,WAnB9B,oBAsBE,WACE,IAAQS,EAASR,KAAKS,MAAdD,KACAb,EAAgBK,KAAKN,MAArBC,YAER,OACE,sBAAKe,UAAU,QAAf,UACE,wBAAQA,UAAU,cAAlB,SACGF,IAGF,YAED,sBAAME,UAAU,cAAhB,SACGf,WAnCX,GAA2BgB,aCN3B,SAASC,IACP,IAAMC,EAAQjB,KAAKkB,MAAMC,WAAWjB,OAAO,GAE3C,MAAM,SAAN,OAAgBe,GAQX,IAAMG,EAAb,4MACEtB,MAAyB,CACvBuB,UAAU,EACVC,UAAW,WAHf,EAMEnB,QAAU,EANZ,EAiCEoB,UAAY,WACV,EAAKf,SAAS,CAAEa,UAAU,KAlC9B,EAqCEG,UAAY,SAACC,GACXA,EAAMC,iBACN,EAAKlB,SAAS,CAAEa,UAAU,KAvC9B,uDAQE,WAAqB,IAAD,OAClBM,SAASC,iBAAiB,cAAexB,KAAKoB,WAC9CG,SAASC,iBAAiB,QAASxB,KAAKmB,WAExCnB,KAAKD,QAAUE,OAAOC,aAAY,WAChC,EAAKE,SAAS,CAAEc,UAAWN,QAC1B,QAdP,gCAiBE,SAAmBa,EAA0BC,GAC3BA,EAAUR,YACVlB,KAAKN,MAAMwB,WAEAlB,KAAKN,MAAMuB,UAEpCZ,QAAQsB,MAAR,uBAA8BD,EAAUR,UAAxC,eAAwDlB,KAAKN,MAAMwB,cAvBzE,kCA2BE,WACEK,SAASK,oBAAoB,cAAe5B,KAAKoB,WACjDG,SAASK,oBAAoB,QAAS5B,KAAKmB,WAC3ClB,OAAOM,cAAcP,KAAKD,WA9B9B,oBA0CE,WACE,MAGIC,KAAKN,MAFPuB,EADF,EACEA,SACAC,EAFF,EAEEA,UAGF,OACE,sBAAKR,UAAU,MAAf,UACE,6CACCO,GAAY,cAAC,EAAD,CAAOT,KAAMU,WAnDlC,GAAyBP,aCZzBkB,IAASC,OACP,cAAC,EAAD,IACAP,SAASQ,eAAe,W","file":"static/js/main.4ec9b53f.chunk.js","sourcesContent":["import { Component } from 'react';\n\ntype Props = {\n  name: string,\n};\n\ntype State = {\n  currentTime: string,\n};\n\nexport class Clock extends Component<Props, State> {\n  state: Readonly<State> = {\n    currentTime: new Date().toUTCString().slice(-12, -4),\n  };\n\n  timerId = 0;\n\n  componentDidMount() {\n    this.timerId = window.setInterval(() => {\n      const time: string = new Date().toUTCString().slice(-12, -4);\n\n      this.setState({ currentTime: time });\n\n      // eslint-disable-next-line no-console\n      console.info(time);\n    }, 1000);\n  }\n\n  componentWillUnmount() {\n    window.clearInterval(this.timerId);\n  }\n\n  render() {\n    const { name } = this.props;\n    const { currentTime } = this.state;\n\n    return (\n      <div className=\"Clock\">\n        <strong className=\"Clock__name\">\n          {name}\n        </strong>\n\n        {' time is '}\n\n        <span className=\"Clock__time\">\n          {currentTime}\n        </span>\n      </div>\n    );\n  }\n}\n","import { Component } from 'react';\nimport './App.scss';\nimport { Clock } from './Clock';\n\nfunction getRandomName(): string {\n  const value = Date.now().toString().slice(-4);\n\n  return `Clock-${value}`;\n}\n\ntype State = {\n  hasClock: boolean,\n  clockName: string,\n};\n\nexport class App extends Component<{}, State> {\n  state: Readonly<State> = {\n    hasClock: true,\n    clockName: 'Clock-0',\n  };\n\n  timerId = 0;\n\n  componentDidMount() {\n    document.addEventListener('contextmenu', this.hideClock);\n    document.addEventListener('click', this.showClock);\n\n    this.timerId = window.setInterval(() => {\n      this.setState({ clockName: getRandomName() });\n    }, 3300);\n  }\n\n  componentDidUpdate(_prevProps: Readonly<{}>, prevState: Readonly<State>) {\n    const oldName = prevState.clockName;\n    const newName = this.state.clockName;\n\n    if (oldName !== newName && this.state.hasClock) {\n      // eslint-disable-next-line no-console\n      console.debug(`Renamed from ${prevState.clockName} to ${this.state.clockName}`);\n    }\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('contextmenu', this.hideClock);\n    document.removeEventListener('click', this.showClock);\n    window.clearInterval(this.timerId);\n  }\n\n  showClock = () => {\n    this.setState({ hasClock: true });\n  };\n\n  hideClock = (event: Event) => {\n    event.preventDefault();\n    this.setState({ hasClock: false });\n  };\n\n  render() {\n    const {\n      hasClock,\n      clockName,\n    } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n        {hasClock && <Clock name={clockName} />}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}